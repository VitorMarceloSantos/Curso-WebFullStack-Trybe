use ("dataCinema2");
// db.movies2.insertMany([
//   {
//     title: "Batman",
//     category: [
//       "action",
//       "adventure",
//     ],
//     imdbRating: 7.7,
//     budget: 35,
//   },
//   {
//     title: "Godzilla",
//     category: [
//       "action",
//       "adventure",
//       "sci-fi",
//     ],
//     imdbRating: 6.6,
//     budget: 1,
//   },
//   {
//     title: "Home Alone",
//     category: [
//       "family",
//       "comedy",
//     ],
//     imdbRating: 7.4,
//   },
// ]);


//  Exercício 1: Adicione a categoria "superhero" ao filme Batman.

// db.movies2.updateOne(
//   { title: 'Batman'},
//   { $push:  { category: 'superhero' } }
// );
// db.movies2.find({});

// Exercício 2: Utilizando o modificador $each, adicione as categorias "villain" e "comic-based" ao filme Batman.

// db.movies2.updateOne(
//   { title: 'Batman' },
//   { $push: { category: { $each: ['villain', 'comic-based'] } } }
// );
// db.movies2.find({});

// Exercício 3: Remova a categoria "action" do filme Batman.

// db.movies2.updateOne(
//   { title: 'Batman' },
//   { $pop: { category: -1 } }
// )
// Outra solução
// db.movies2.updateOne(
//   { title: 'Batman' },
//   { $pull: { category: 'action' } }
// )
// db.movies2.find({});

// Exercício 4: Remova o primeiro elemento do array category do filme Batman.

// db.movies2.updateOne(
//   { title: 'Batman' },
//   { $pop: { category: -1 } }
// )
// db.movies2.find({});

// Exercício 5: Remova o último elemento do array category do filme Batman.

// db.movies2.updateOne(
//   { title: 'Batman' },
//   { $pop: { category: 1 } }
// )
// db.movies2.find({});

// Exercício 6: Adicione o elemento "action" ao array category do filme Batman, garantindo que esse valor não se duplique.

// db.movies2.updateOne(
//   { title: 'Batman' },
//   { $addToSet: { category: 'action' } }
// );
// db.movies2.find({});

// Exercício 7: Adicione a categoria "90's" aos filmes Batman e Home Alone.

// db.movies2.updateMany(
//   { title: { $in: ['Batman', 'Home Alone'] } },
//   { $addToSet: { category: "90's" } }
// );
// db.movies2.find({});

// Exercício 8: Crie um array de documentos chamado cast para o filme Home Alone com os seguintes dados:
// {
//   "actor": "Macaulay Culkin",
//   "character": "Kevin"
// },
// {
//   "actor": "Joe Pesci",
//   "character": "Harry"
// },
// {
//   "actor": "Daniel Stern"
// }

// db.movies2.updateOne(
//   { title: 'Home Alone' },
//   { $push: { 
//       cast: { 
//         $each: [
//           {
//             "actor": "Macaulay Culkin",
//             "character": "Kevin"
//           },
//           {
//             "actor": "Joe Pesci",
//             "character": "Harry"
//           },
//           {
//             "actor": "Daniel Stern"
//           }
//         ] 
//       } 
//     } 
//   }
// );
// db.movies2.find({});

// Exercício 9: Adicione o campo character com o valor Marv ao array de cast em que o campo actor seja igual a Daniel Stern no filme Home Alone.
// https://www.mongodb.com/docs/manual/reference/operator/update/positional/
// Utiliza o .$ no array como uma forma generica quando não se sabe a posição que se encontra o elemento desejado.

// db.movies2.updateOne(
//   { title: 'Home Alone', "cast.actor": 'Daniel Stern' }, // seleciona apenas o objeto do danielSetrn
//   { $set: { "cast.$.character": 'Marv' } } // entra no cast e o $ não sabe qual a posição do array que se refere a DanielStern, daí cria um novo atributo character(caso não exista)
// );
// db.movies2.find({});

// Exercício 10: Crie um array de documentos chamado cast para o filme Batman com os seguintes dados:
// {
//   "character": "Batman"
// },
// {
//   "character": "Alfred"
// },
// {
//   "character": "Coringa"
// }

// db.movies2.updateOne(
//   { title: 'Batman' },
//   { $push: { 
//       cast: {  
//         $each: [
//           {
//             "character": "Batman"
//           },
//           {
//             "character": "Alfred"
//           },
//           {
//             "character": "Coringa"
//           }
//         ]
//       }
//    }
//   }
// );
// db.movies2.find({});

// Exercício 11: Produza três querys para o filme Batman:
// Adicione o campo actor, que deve ser um array com o valor Christian Bale, ao array de cast em que o campo character seja igual a Batman;
// Adicione o campo actor, que deve ser um array com o valor Michael Caine, ao array de cast em que o campo character seja igual a Alfred;
// Adicione o campo actor, que deve ser um array com o valor Heath Ledger, ao array de cast em que o campo character seja igual a Coringa.

db.movies2.updateOne(
  { title:  'Batman', "cast.character": 'Batman' },
  { $set: { "cast.$.actor": 'Christian Bale' } }
);
db.movies2.updateOne(
  { title:  'Batman', "cast.character": 'Alfred' },
  { $set: { "cast.$.actor": ['Michael Caine'] } }
);
db.movies2.updateOne(
  { title:  'Batman', "cast.character": 'Coringa' },
  { $set: { "cast.$.actor": ['Heath Ledger'] } }
);
// db.movies2.find({});

// Exercício 12: Adicione aos atores de cast do character Batman do filme Batman os valores "Michael Keaton", "Val Kilmer" e "George Clooney", e deixe o array em ordem alfabética.

// db.movies2.updateOne(
//   { title: 'Batman', "cast.character": 'Batman'},
//   { $unset: { "cast.$.actor": [] } }
// );
// db.movies2.updateOne(
//   { title: 'Batman', "cast.character": 'Batman'},
//   { $push: { 
//       "cast.$.actor": { 
//           $each: [ "Michael Keaton", "Val Kilmer", "George Clooney" ]
//       }
//     }
//   }
// );
db.movies2.find({});

